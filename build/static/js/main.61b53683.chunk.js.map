{"version":3,"sources":["redux/reducers/auth.js","redux/actionTypes/user.js","redux/reducers/user.js","redux/reducers/card.js","redux/actionTypes/nav.js","redux/reducers/nav.js","redux/reducers/rootReducer.js","redux/actionTypes/card.js","redux/actionTypes/auth.js","hooks/authenticate.js","redux/actions/auth.js","components/Entry.js","components/Auth.js","components/Login.js","components/Nav.js","hooks/post.js","redux/actions/card.js","hooks/interaction.js","redux/actions/user.js","components/Upvote.js","components/Upvoted.js","components/Tag.js","components/Feed.js","components/Home.js","components/Follow.js","components/Followed.js","components/Profile.js","components/Layout.js","App.js","index.js"],"names":["initialState","route","loggedIn","currentUser","userData","cards","filter","combineReducers","user","state","action","type","value","card","map","_id","auth","nav","Authenticate","dispatch","useDispatch","useHistory","useSelector","useState","inputs","setInputs","handleInputChange","e","preventDefault","target","name","handleSubmit","console","log","data","a","fetch","method","body","JSON","stringify","headers","response","json","parsedResponse","status","window","sessionStorage","token","authenticate","Entry","setRoute","Grid","columns","divided","id","Column","Menu","vertical","secondary","Item","icon","Row","Form","onSubmit","Field","Input","focus","placeholder","onChange","Button","onClick","Header","as","Icon","to","Auth","location","pathname","substring","Modal","open","Content","Login","Nav","exact","className","Post","tagged","currentTarget","match","strippedTags","tag","tags","post","Interaction","upvote","username","user_username","follow","userToFollow","getState","followedProfile","Upvote","Upvoted","Tag","reactStringReplace","i","key","Feed","useRouteMatch","explore","path","home","profilePath","likesPath","profile","params","useEffect","getProfilePosts","getLikedPosts","cardList","upvoted","Home","Follow","Followed","Profile","followers","length","Image","src","fluid","email","isFollowing","following","pointing","Layout","component","App","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.61b53683.chunk.js","sourcesContent":["import * as AuthTypes from '../actionTypes/auth'\r\n\r\nconst initialState = {\r\n    route: '',\r\n    loggedIn: false,\r\n    currentUser: ''\r\n}\r\n\r\nexport default function Auth(state=initialState, action) {\r\n    switch(action.type) {\r\n        \r\n        case AuthTypes.TOGGLE:\r\n            return {...state, route: state.route = action.route}\r\n        \r\n        case AuthTypes.AUTHENTICATE:\r\n            return {\r\n                    ...state, loggedIn: state.loggedIn = true,\r\n                    ...state, currentUser: state.currentUser = action.value\r\n                   }\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","export const PROFILE = 'PROFILE'\r\nexport const LIKE = 'LIKE'\r\n\r\n","import * as UserActionTypes from '../actionTypes/user'\r\n\r\nconst initialState = {\r\n    userData: {}\r\n}\r\n\r\n\r\nexport default function Card(state=initialState, action) {\r\n    switch(action.type) {\r\n        case UserActionTypes.PROFILE:\r\n            return {...state, userData: state.userData = action.value}\r\n        case UserActionTypes.LIKE:\r\n            return {...state, userData: state.userData = action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import * as CardActionTypes from '../actionTypes/card'\r\n\r\nconst initialState = {\r\n    cards: [],\r\n}\r\n\r\nexport default function Card(state=initialState, action) {\r\n    switch(action.type) {\r\n        case CardActionTypes.READ:\r\n            return {...state, cards: state.cards = action.value}\r\n        case CardActionTypes.POST:\r\n            return {...state, cards: state.cards = [...state.cards, action.value]}\r\n        case CardActionTypes.UPVOTE:\r\n            return {...state, cards: state.cards = state.cards.map((card) => {\r\n               if(card._id === action.value._id) card = action.value\r\n               return card\r\n            })}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","export const FILTERFETCH = 'FILTERFETCH'\r\n\r\n","import * as NavActionTypes from '../actionTypes/nav'\r\n\r\nconst initialState = {\r\n    filter: ''\r\n}\r\n\r\nexport default function Nav(state=initialState, action) {\r\n    switch(action.type) {\r\n        case NavActionTypes.FILTERFETCH:\r\n            return {...state, filter: state.filter = action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport auth from './auth'\r\nimport user from './user'\r\nimport card from './card'\r\nimport nav from './nav'\r\n\r\nexport default combineReducers({user, card, auth, nav})","import * as cardActionTypes from '../actionTypes/card'\r\n\r\nexport const POST = 'POST'\r\nexport const READ = 'READ'\r\nexport const UPVOTE = 'UPVOTE'","export const AUTHENTICATE = 'AUTHENTICATE'\r\nexport const TOGGLE = 'TOGGLE'\r\n","import React,  {useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {authenticate} from '../redux/actions/auth'\r\n\r\nconst Authenticate = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const loggedIn = useSelector(state => state.auth.loggedIn)\r\n    const [inputs, setInputs] = useState({})\r\n   \r\n  \r\n    const handleInputChange = e => {\r\n        e.preventDefault()\r\n        setInputs({...inputs, [e.target.name]: e.target.value})\r\n    }\r\n\r\n   const handleSubmit = (e, route) => {\r\n       console.log(inputs)\r\n       e.preventDefault()\r\n       dispatch(authenticate(route, inputs))\r\n    }\r\n\r\n\r\n    return {handleInputChange, handleSubmit}\r\n}\r\n \r\nexport default Authenticate;","import * as AuthActionTypes from '../actionTypes/auth'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nexport const toggle = route => {\r\n    return {\r\n        type: AuthActionTypes.TOGGLE,\r\n        route\r\n    }\r\n}\r\n\r\nexport const authenticate = (route, data) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8000/api/auth/${route}`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'Content-Type' : 'application/json',\r\n                    // 'auth-header': window.sessionStorage.token\r\n                }\r\n            })\r\n            const parsedResponse = await response.json()\r\n            console.log(parsedResponse)\r\n            if(parsedResponse.status === 200) {\r\n                window.sessionStorage.token = parsedResponse.token\r\n               dispatch({type: AuthActionTypes.AUTHENTICATE, value: parsedResponse.user})\r\n            }\r\n        } catch (error) {\r\n            console.log('Authenticate Error', error)\r\n        }\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Authenticate from '../hooks/authenticate'\r\nimport {Grid, Form, Input, Button, Icon, Header, Menu} from 'semantic-ui-react'\r\nimport '../styles/entry.css'\r\n\r\nconst Entry = () => {\r\n    const [route, setRoute] = useState()\r\n    const {handleInputChange, handleSubmit} = Authenticate()\r\n\r\n    return (\r\n        <Grid columns={2} divided id=\"entry-grid\">\r\n        \r\n            <Grid.Column id=\"left-entry-column\">\r\n                <Menu id=\"description-menu\" vertical secondary>\r\n                    <Menu.Item \r\n                    icon=\"search\"\r\n                    name=\"Follow your interests.\"/>\r\n                    <Menu.Item \r\n                    icon=\"users\"\r\n                    name=\"Hear what other people are talking about.\"/>\r\n                    <Menu.Item\r\n                    icon=\"comment outline\" \r\n                    name=\"Join the conversation.\"/>\r\n                </Menu>\r\n            </Grid.Column>\r\n        \r\n            <Grid.Column id=\"right-entry-column\">\r\n                <Grid.Row>\r\n                    <Form id=\"entry-form\" onSubmit={(e) => handleSubmit(e, route)}>\r\n                        <Form.Field>\r\n                            <Input \r\n                            focus \r\n                            placeholder=\"Email\"\r\n                            type=\"email\" \r\n                            name=\"email\"\r\n                            onChange={handleInputChange}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <Input \r\n                            focus \r\n                            placeholder=\"Password\"\r\n                            type=\"password\" \r\n                            name=\"password\"\r\n                            onChange={handleInputChange}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <Button onClick={() => setRoute('login')}>Log in</Button>\r\n                        </Form.Field>\r\n                    </Form>\r\n                </Grid.Row>\r\n                \r\n                <Grid.Row id=\"right-column-bottom-row\">\r\n                <div id=\"description\">\r\n                    <Header as=\"h1\">\r\n                        <Icon name=\"sticky note\"/>\r\n                    </Header>\r\n                    <Header as=\"h1\">See what's happening in the world right now</Header>\r\n                </div>\r\n\r\n                <div id=\"modal-buttons\">\r\n                    <p>Join Community Cards today.</p>\r\n                    <Link to=\"/register\"><Button id=\"register-button\">Register</Button></Link>\r\n                    <Link to=\"/login\"><Button id=\"login-button\">Log in</Button></Link>\r\n                </div>\r\n                </Grid.Row>\r\n\r\n            </Grid.Column>\r\n            \r\n            <Grid.Row id=\"footer\">\r\n                <h6>About</h6>\r\n                <h6>About</h6>\r\n                <h6>About</h6>\r\n                <h6>About</h6>\r\n                <h6>About</h6>\r\n                <h6>About</h6>\r\n            </Grid.Row>\r\n            \r\n        </Grid>\r\n    )\r\n}\r\n \r\nexport default Entry;","import React from 'react'\r\nimport {Modal, Form, Button, Input} from 'semantic-ui-react'\r\nimport Authenticate from '../hooks/authenticate'\r\nimport '../styles/auth.css'\r\n\r\nconst Auth = () => {\r\n    const route = window.location.pathname.substring(1)\r\n    const {handleInputChange, handleSubmit} = Authenticate()\r\n\r\n    \r\n    return (\r\n        <Modal open={true} id=\"auth-modal\">\r\n            <Modal.Content>\r\n                <Form onSubmit={(e) => handleSubmit(e, route)}>\r\n                    <h3>Create Your Account</h3>\r\n                    <Form.Field>\r\n                        <Input \r\n                        focus \r\n                        type=\"text\" \r\n                        name=\"username\"\r\n                        placeholder=\"Username\"\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <Input \r\n                        type=\"email\" \r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <Input \r\n                        type=\"password\" \r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    </Form.Field>\r\n                    <Button>Submit</Button>\r\n                </Form>\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n}\r\n \r\nexport default Auth;","import React from 'react';\r\nimport Authenticate from '../hooks/authenticate'\r\nimport {Header, Icon, Form, Input, Button} from 'semantic-ui-react'\r\nimport '../styles/login.css'\r\n\r\nconst Login = () => {\r\n    const route = window.location.pathname.substring(1)\r\n     const {handleInputChange, handleSubmit} = Authenticate()\r\n    return (\r\n        <div id=\"login\">\r\n        <div id=\"login-header\">\r\n            <Header as=\"h2\"><Icon name=\"sticky note\"/></Header>\r\n            <h2>Log in to Community Cards</h2>\r\n        </div>\r\n        <Form onSubmit={(e) => handleSubmit(e, route)}>\r\n            <Form.Field>\r\n                <Input \r\n                    focus \r\n                    type=\"email\" \r\n                    name=\"email\"\r\n                    placeholder=\"email\"\r\n                    onChange={handleInputChange}\r\n                />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <Input \r\n                    focus \r\n                    type=\"password\" \r\n                    name=\"password\"\r\n                    placeholder=\"password\"\r\n                    onChange={handleInputChange}\r\n                />\r\n            </Form.Field>\r\n            <Button>Log in</Button>\r\n        </Form>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Login;","import React, {useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {filterFetch} from '../redux/actions/nav'\r\nimport {Menu, Icon} from 'semantic-ui-react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport '../styles/nav.css'\r\n\r\n\r\nconst Nav = () => {\r\n    const currentUser = useSelector(state => state.auth.currentUser)\r\n    \r\n    return (\r\n        <Menu vertical secondary id=\"nav\">\r\n            <Menu.Item\r\n            icon=\"sticky note\"\r\n            />\r\n            \r\n            <NavLink exact to=\"/home\" className=\"item\">\r\n             <Icon name=\"home\"/>\r\n             Home\r\n            </NavLink>\r\n\r\n            <NavLink exact to=\"/explore\" className=\"item\">\r\n                <Icon name=\"globe\"/>\r\n                Explore\r\n            </NavLink>\r\n            \r\n            <NavLink exact to={`/${currentUser}`} className=\"item\">\r\n                <Icon name=\"user circle\"/>\r\n                Profile\r\n            </NavLink>\r\n            \r\n            <NavLink exact to=\"/logout\" className=\"item\">\r\n                <Icon name=\"sign out\"/>\r\n                Log out\r\n            </NavLink>\r\n            \r\n            <NavLink exact to=\"/create\" className=\"item\">\r\n                <Icon name=\"plus\"/>\r\n                Create a Card\r\n            </NavLink>\r\n        </Menu>\r\n    );\r\n}\r\n \r\nexport default Nav;","import React, {useState} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {post} from '../redux/actions/card'\r\n\r\n\r\nconst Post = () => {\r\n    const dispatch = useDispatch()\r\n    let [inputs, setInputs] = useState({})\r\n   \r\n    const handleInputChange = e => {\r\n        let regex = /[#]\\S[a-zA-Z]*/g;\r\n        const duplicateText = e.currentTarget.value;\r\n        const tagged = duplicateText.match(regex);\r\n        let strippedTags = tagged && tagged.map(tag => tag.substring(1));\r\n        inputs.tags = strippedTags;\r\n        e.preventDefault()\r\n        setInputs({...inputs, [e.target.name]: e.target.value})\r\n    }\r\n\r\n   const handleSubmit = (e, route) => {\r\n       e.preventDefault()\r\n       dispatch(post(inputs, route))\r\n    }\r\n\r\n    return {handleInputChange, handleSubmit}\r\n}\r\n \r\nexport default Post;","import * as CardActionTypes from '../actionTypes/card'\r\n\r\nexport const post = (data, route) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8000/api/card/${route}`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'Content-Type' : 'application/json',\r\n                    'auth-token': window.sessionStorage.token\r\n                }\r\n            })\r\n            const parsedResponse = await response.json()\r\n            dispatch({type: CardActionTypes.POST, value: parsedResponse})\r\n        } catch (error) {\r\n            console.log('Authenticate Error', error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getPosts = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8000/api/card/all`, {\r\n                headers: {\r\n                    'auth-token' : window.sessionStorage.token\r\n                }\r\n            })\r\n            const parsedResponse = await response.json()\r\n            console.log(parsedResponse)\r\n            dispatch({type: CardActionTypes.READ, value: parsedResponse})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getPersonalPosts = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8000/api/card/personal`, {\r\n                headers: {\r\n                    'auth-token' : window.sessionStorage.token\r\n                }\r\n            })\r\n            const parsedResponse = await response.json()\r\n            console.log(parsedResponse)\r\n            dispatch({type: CardActionTypes.READ, value: parsedResponse})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getProfilePosts = profile => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8000/api/card/profile/${profile}`, {\r\n                headers: {\r\n                    'auth-token' : window.sessionStorage.token\r\n                }\r\n            })\r\n            const parsedResponse = await response.json()\r\n            console.log(parsedResponse)\r\n            dispatch({type: CardActionTypes.READ, value: parsedResponse})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getLikedPosts = profile => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8000/api/card/likes/${profile}`, {\r\n                headers: {\r\n                    'auth-token': window.sessionStorage.token\r\n                }\r\n            })\r\n            const parsedResponse = await response.json()\r\n            console.log(parsedResponse)\r\n            dispatch({type: CardActionTypes.READ, value: parsedResponse})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const upvotePost = post => {\r\n    return async dispatch => {\r\n        try {\r\n            console.log(post)\r\n            const response = await fetch(`http://localhost:8000/api/card/upvote/${post}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'auth-token': window.sessionStorage.token\r\n                }\r\n            })\r\n            const parsedResponse = await response.json()\r\n            dispatch({type: CardActionTypes.UPVOTE, value: parsedResponse})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {upvotePost} from '../redux/actions/card'\r\nimport {likeProfile, followProfile, followedProfile} from '../redux/actions/user'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Interaction = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const upvote = card => {\r\n        console.log(card)\r\n        dispatch(upvotePost(card._id))\r\n        dispatch(likeProfile(card.user_username))\r\n    }\r\n\r\n    const follow = (userToFollow) => {\r\n        dispatch(followProfile(userToFollow))\r\n        dispatch(followedProfile(userToFollow))\r\n    }\r\n\r\n    return {upvote, follow}\r\n}\r\n \r\nexport default Interaction;","import * as UserActionTypes from '../actionTypes/user'\r\n\r\nexport const getProfile = username => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8000/api/user/profile${username}`, {\r\n                headers: {\r\n                    'auth-token': window.sessionStorage.token\r\n                }\r\n            })\r\n\r\n            const parsedResponse = await response.json()\r\n            dispatch({type: UserActionTypes.PROFILE, value: parsedResponse})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const likeProfile = username => {\r\n    return async dispatch => {\r\n        try {\r\n            console.log(username)\r\n            const response = await fetch(`http://localhost:8000/api/user/like/${username}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'auth-token': window.sessionStorage.token\r\n                }\r\n            })\r\n\r\n            const parsedResponse = await response.json()\r\n            dispatch({type: UserActionTypes.PROFILE, value: parsedResponse})\r\n            console.log(parsedResponse)\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport const followProfile = username => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            console.log(username)\r\n            const response = await fetch(`http://localhost:8000/api/user/follow/${username}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'auth-token':window.sessionStorage.token,\r\n                }\r\n            })\r\n            const parsedResponse = await response.json()\r\n            dispatch({type: UserActionTypes.PROFILE, value: parsedResponse})\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const followedProfile = username => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8000/api/user/followed/${username}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'auth-token':window.sessionStorage.token,\r\n                }\r\n            })\r\n            const parsedResponse = await response.json()\r\n            dispatch({type: UserActionTypes.PROFILE, value: parsedResponse})\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Interaction from '../hooks/interaction'\r\nimport {Icon} from 'semantic-ui-react'\r\n\r\nconst Upvote = ({card}) => {\r\n    const {upvote} = Interaction()\r\n\r\n    return (\r\n        <Icon name=\"heart outline\" onClick={() => upvote(card)}/>\r\n    );\r\n}\r\n \r\nexport default Upvote;","import React from 'react';\r\nimport {Icon} from 'semantic-ui-react'\r\nimport '../styles/upvote.css'\r\n\r\nconst Upvoted = () => {\r\n    return (\r\n        <Icon name=\"heart\" id=\"upvoted\"/>\r\n    );\r\n}\r\n \r\nexport default Upvoted;","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport reactStringReplace from 'react-string-replace'\r\n\r\nconst Tag = ({card}) => {\r\n    return (\r\n        <p>\r\n        {reactStringReplace(card.body, /(#\\S[a-zA-Z]*)/gi, (match, i) => <Link to={`/tagged/${match.substring(1)}`} key={i} className=\"tag\">{match}</Link>)}</p>\r\n    );\r\n}\r\n \r\nexport default Tag;","import React, {useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {Link, useRouteMatch} from 'react-router-dom'\r\nimport {Grid, Icon} from 'semantic-ui-react'\r\nimport Upvote from './Upvote'\r\nimport Upvoted from './Upvoted'\r\nimport Tag from './Tag'\r\nimport '../styles/card.css'\r\nimport { getProfilePosts, getPosts, getLikedPosts, getPersonalPosts } from '../redux/actions/card'\r\n\r\nconst Feed = () => {\r\n    const dispatch = useDispatch()\r\n    const match = useRouteMatch()\r\n    const cards = useSelector(state => state.card.cards)\r\n    const explore = match.path ==='/explore'\r\n    const home = match.path ==='/home'\r\n    const profilePath = match.path === \"/:username\"\r\n    const likesPath = match.path ===\"/:username/likes\"\r\n    const profile = match.params.username; \r\n\r\n    useEffect(() => {\r\n        if(explore)  dispatch(getPosts())\r\n        if(home)     dispatch(getPersonalPosts())\r\n        if(profilePath)  dispatch(getProfilePosts(profile))\r\n        if(likesPath) dispatch(getLikedPosts(profile))\r\n        console.log(likesPath)\r\n    }, [match.path])\r\n\r\n    const cardList = cards && cards.map((card, i) => {\r\n        return(\r\n            <Grid.Row id=\"card-row\" key={i}>\r\n                <Link to={`/${card.user_username}`}><Icon name=\"user circle\"/></Link>\r\n                <div className=\"card-content\">\r\n                    <div className=\"user-user-options\">{card.user_username} <Icon name=\"chevron down\"/></div>\r\n                    <Tag card={card}/>\r\n                    <div className=\"card-menu\">\r\n                    {card.upvoted ? <Upvoted/> : <Upvote card={card}/>}\r\n                    </div>\r\n                </div>\r\n            </Grid.Row>\r\n        )\r\n    })\r\n    \r\n    return (\r\n        <>\r\n        {cardList}\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Feed;","import React from 'react'\r\nimport Post from '../hooks/post'\r\nimport Feed from './Feed'\r\nimport {Grid, Icon, Form, Input, Button} from 'semantic-ui-react'\r\nimport '../styles/layout.css'\r\n\r\nconst Home = () => {\r\n    const {handleInputChange, handleSubmit} = Post()\r\n\r\n    return (\r\n        <>\r\n        <Grid.Row id=\"home-row\">\r\n            Home\r\n        </Grid.Row>\r\n        <Grid.Row id=\"home-menu\">\r\n                    <Icon name=\"user circle outline\"/> \r\n                    <Form onSubmit={(e) => handleSubmit(e, '/post')}>\r\n                        <Form.Field>\r\n                            <Input \r\n                            type=\"text\" \r\n                            name=\"body\" \r\n                            placeholder=\"What's happening?\"\r\n                            onChange={handleInputChange}\r\n                            />\r\n                        </Form.Field>\r\n                        <Button>Submit</Button>\r\n                    </Form>\r\n        </Grid.Row>\r\n        <Feed/>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport {Button} from 'semantic-ui-react'\r\nimport Interaction from '../hooks/interaction'\r\nconst Follow = ({userToFollow}) => {\r\n    const {follow} = Interaction()\r\n    return (\r\n        <Button onClick={() => follow(userToFollow)}>Follow</Button>\r\n    );\r\n}\r\n \r\nexport default Follow;","import React from 'react';\r\nimport {Button} from 'semantic-ui-react'\r\nconst Followed = () => {\r\n    return (\r\n        <Button>Following</Button>\r\n    );\r\n}\r\n \r\nexport default Followed;","import React, { useEffect } from 'react'\r\nimport Feed from './Feed'\r\nimport Follow from './Follow'\r\nimport Followed from './Followed'\r\nimport {NavLink, useRouteMatch} from 'react-router-dom'\r\nimport {getProfile} from '../redux/actions/user'\r\nimport {Grid, Image, Icon, Menu} from 'semantic-ui-react'\r\nimport '../styles/profile.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst Profile = () => {\r\n    const match = useRouteMatch()\r\n    const dispatch = useDispatch()\r\n    const user = window.location.pathname\r\n    const profile = useSelector(state => state.user.userData)\r\n    const currentUser = useSelector(state => state.auth.currentUser)\r\n\r\n    useEffect(() => {\r\n        dispatch(getProfile(user))\r\n    }, [profile.followers && profile.followers.length])\r\n\r\n    return (\r\n        <>\r\n            <Grid.Row id=\"top\">\r\n                <NavLink to=\"/home\"><Icon name=\"arrow left\"/></NavLink>\r\n                <div>\r\n                    <h3>{profile.username}</h3>\r\n                    <small> 0 posts</small>\r\n                </div>\r\n            </Grid.Row>\r\n            <Grid.Row id=\"banner\">\r\n                <Image src=\"https://media.tacdn.com/media/attractions-splice-spp-674x446/07/88/4d/9a.jpg\" fluid/>\r\n            </Grid.Row>\r\n            <Grid.Row id=\"information\">\r\n               <Icon name=\"user circle\"/>\r\n                <div className=\"information-text\">\r\n                    <div>\r\n                        <h3>{profile.username}</h3>\r\n                        <p>{profile.email}</p>\r\n                    </div>\r\n                    \r\n                    {profile.isFollowing \r\n                        ?\r\n                            <Followed/>\r\n                        :   \r\n                            <Follow userToFollow={profile.username}/>\r\n                    }\r\n                </div>\r\n\r\n                \r\n                <div className=\"profile-stats\">\r\n                    <span className=\"num\">{profile.following && profile.following.length}</span> Following <span className=\"num\">{profile.followers && profile.followers.length}</span> Followers\r\n                </div>\r\n                \r\n                <Menu pointing secondary id=\"profile-nav\">\r\n                    <NavLink exact to={`/${match.params.username}`}>Cards</NavLink>\r\n                    <NavLink exact to={`/${match.params.username}/likes`}>Likes</NavLink>\r\n                </Menu>\r\n            </Grid.Row>\r\n            <Feed/>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Profile;","import React from 'react'\r\nimport Nav from './Nav'\r\nimport Home from '../components/Home'\r\nimport Feed from './Feed'\r\nimport Profile from './Profile'\r\nimport {Grid} from 'semantic-ui-react'\r\nimport {Route, Switch} from 'react-router-dom'\r\nimport '../styles/layout.css'\r\nimport {useSelector} from 'react-redux'\r\n\r\n\r\nconst Layout = () => {\r\n    const cards = useSelector(state => state.card.cards)\r\n    \r\n    return (\r\n        <Grid columns={3} divided id=\"layout-grid\">\r\n            <Grid.Column id=\"left-column\">\r\n                <Nav/>\r\n            </Grid.Column>\r\n            \r\n            <Grid.Column id=\"center-column\">\r\n\r\n                <Switch>\r\n                    <Route exact path=\"/home\" component={Home}/>\r\n                    <Route exact path=\"/explore\" component={Feed}/>\r\n                    <Route exact path={[\"/:username\", \"/:username/likes\"]} component={Profile}/>\r\n                </Switch>\r\n                    \r\n                    {\r\n                        cards.length === 0 \r\n                    ?\r\n                        <Grid.Row id=\"home-intro\">\r\n                            <h3>Welcome to Community Cards</h3>\r\n                            <p>This is a twitter clone that captures the essentials of twitter</p>\r\n                        </Grid.Row>\r\n                    : \r\n                        null\r\n                    }\r\n            </Grid.Column>\r\n            \r\n            <Grid.Column id=\"layout-right-column\"/>\r\n      </Grid>\r\n    );\r\n}\r\n \r\nexport default Layout;","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom'\r\nimport Entry from './components/Entry'\r\nimport Auth from './components/Auth'\r\nimport Login from './components/Login'\r\nimport Layout from './components/Layout'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport './styles/base.css'\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction App() {\r\n  const loggedIn = useSelector(state => state.auth.loggedIn)\r\n\r\n  return (\r\n    <Router>\r\n        <Route exact path={[\"/\", \"/register\"]} component={Entry}/>\r\n        <Route exact path=\"/register\" component={Auth}/>\r\n        \r\n        <Switch>\r\n          <Route exact path=\"/login\" component={Login}/>\r\n          <Route exact path={[\"/home\", \"/explore\", \"/:username\", \"/:username/likes\"]} component={Layout}/>\r\n        </Switch>\r\n        \r\n        {loggedIn ? <Redirect to=\"/home\"/> : null}\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux' \r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './redux/reducers/rootReducer'\r\nimport App from './App';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}