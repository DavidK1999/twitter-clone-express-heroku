{"version":3,"sources":["redux/reducers/auth.js","redux/actionTypes/user.js","redux/reducers/user.js","redux/actionTypes/card.js","redux/reducers/card.js","redux/actionTypes/nav.js","redux/reducers/nav.js","redux/reducers/rootReducer.js","redux/actionTypes/auth.js","hooks/authenticate.js","redux/actions/auth.js","components/Entry.js","components/Auth.js","components/Login.js","hooks/deauthenticate.js","components/Nav.js","hooks/post.js","redux/actions/card.js","hooks/interaction.js","redux/actions/user.js","components/Upvote.js","components/Upvoted.js","components/Tag.js","components/Feed.js","components/Home.js","components/Follow.js","components/Followed.js","components/Profile.js","components/CreateCard.js","components/Layout.js","App.js","index.js"],"names":["initialState","route","loggedIn","error","currentUser","userData","READ","cards","filter","combineReducers","user","state","action","type","value","card","CardActionTypes","map","_id","auth","nav","Authenticate","dispatch","useDispatch","useHistory","useSelector","useState","inputs","setInputs","handleInputChange","e","preventDefault","target","name","handleSubmit","console","log","data","a","fetch","method","body","JSON","stringify","headers","response","json","parsedResponse","status","window","sessionStorage","token","message","authenticate","Entry","setRoute","logged","Grid","columns","divided","id","Column","Menu","vertical","secondary","Item","icon","Row","Form","onSubmit","Field","Input","focus","placeholder","onChange","Button","onClick","Message","negative","Header","as","Icon","to","Auth","location","pathname","substring","Modal","open","Content","Login","Deauthenticate","undefined","Nav","logout","exact","className","Post","history","tagged","currentTarget","match","strippedTags","tag","tags","post","push","Interaction","upvote","username","user_username","follow","userToFollow","getState","followedProfile","Upvote","Upvoted","Tag","reactStringReplace","i","key","Feed","useRouteMatch","explore","path","home","profilePath","likesPath","taggedPath","params","profile","useEffect","getProfilePosts","getLikedPosts","getTaggedPosts","cardList","upvoted","Home","Follow","Followed","Profile","followers","length","Image","src","fluid","email","isFollowing","following","pointing","CreateCard","centered","TextArea","Layout","component","exacth","App","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e44941e6.chunk.js","sourcesContent":["import * as AuthTypes from '../actionTypes/auth'\r\n\r\nconst initialState = {\r\n    route: '',\r\n    loggedIn: false,\r\n    error: '',\r\n    currentUser: ''\r\n}\r\n\r\nexport default function Auth(state=initialState, action) {\r\n    switch(action.type) {\r\n        \r\n        case AuthTypes.TOGGLE:\r\n            return {...state, route: state.route = action.route}\r\n        \r\n        case AuthTypes.AUTHENTICATE:\r\n            return {\r\n                    ...state, loggedIn: state.loggedIn = true,\r\n                    ...state, currentUser: state.currentUser = action.value\r\n                   }\r\n        case AuthTypes.DEAUTHENTICATE:\r\n            return {\r\n                ...state, loggedIn: state.loggedIn = false,\r\n                ...state, currentUser: state.currentUser = ''\r\n            }\r\n        case AuthTypes.ERROR:\r\n            return {...state, error: state.error = action.value}\r\n        \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\n","export const PROFILE = 'PROFILE'\r\nexport const LIKE = 'LIKE'\r\n\r\n","import * as UserActionTypes from '../actionTypes/user'\r\n\r\nconst initialState = {\r\n    userData: {}\r\n}\r\n\r\n\r\nexport default function Card(state=initialState, action) {\r\n    switch(action.type) {\r\n        case UserActionTypes.PROFILE:\r\n            return {...state, userData: state.userData = action.value}\r\n        case UserActionTypes.LIKE:\r\n            return {...state, userData: state.userData = action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import * as cardActionTypes from '../actionTypes/card'\r\n\r\nexport const POST = 'POST'\r\nexport const READ = 'READ'\r\nexport const UPVOTE = 'UPVOTE'\r\nexport const ERROR = 'ERROR'","import * as CardActionTypes from '../actionTypes/card'\r\n\r\nconst initialState = {\r\n    cards: [],\r\n    error: '',\r\n    'posting': false\r\n}\r\n\r\nexport default function Card(state=initialState, action) {\r\n    switch(action.type) {\r\n        case CardActionTypes.READ:\r\n            return {...state, cards: state.cards = action.value}\r\n        case CardActionTypes.POST:\r\n            return {...state, cards: state.cards = [...state.cards, action.value]}\r\n        case CardActionTypes.UPVOTE:\r\n            return {...state, cards: state.cards = state.cards.map((card) => {\r\n               if(card._id === action.value._id) card = action.value\r\n               return card\r\n            })}\r\n        case CardActionTypes.ERROR:\r\n            return {...state, error: state.error = action.value}\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","export const FILTERFETCH = 'FILTERFETCH'\r\n\r\n","import * as NavActionTypes from '../actionTypes/nav'\r\n\r\nconst initialState = {\r\n    filter: ''\r\n}\r\n\r\nexport default function Nav(state=initialState, action) {\r\n    switch(action.type) {\r\n        case NavActionTypes.FILTERFETCH:\r\n            return {...state, filter: state.filter = action.value}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport auth from './auth'\r\nimport user from './user'\r\nimport card from './card'\r\nimport nav from './nav'\r\n\r\nexport default combineReducers({user, card, auth, nav})","export const AUTHENTICATE = 'AUTHENTICATE'\r\nexport const DEAUTHENTICATE = 'DEAUTHENTICATE'\r\nexport const ERROR = 'ERROR'\r\nexport const TOGGLE = 'TOGGLE'\r\n","import React,  {useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {authenticate} from '../redux/actions/auth'\r\n\r\nconst Authenticate = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const loggedIn = useSelector(state => state.auth.loggedIn)\r\n    const [inputs, setInputs] = useState({})\r\n   \r\n  \r\n    const handleInputChange = e => {\r\n        e.preventDefault()\r\n        setInputs({...inputs, [e.target.name]: e.target.value})\r\n    }\r\n\r\n   const handleSubmit = (e, route) => {\r\n       console.log(inputs)\r\n       e.preventDefault()\r\n       dispatch(authenticate(route, inputs))\r\n    }\r\n\r\n\r\n    return {handleInputChange, handleSubmit}\r\n}\r\n \r\nexport default Authenticate;","import * as AuthActionTypes from '../actionTypes/auth'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nexport const toggle = route => {\r\n    return {\r\n        type: AuthActionTypes.TOGGLE,\r\n        route\r\n    }\r\n}\r\n\r\nexport const authenticate = (route, data) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8000/api/auth/${route}`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'Content-Type' : 'application/json',\r\n                    // 'auth-header': window.sessionStorage.token\r\n                }\r\n            })\r\n            const parsedResponse = await response.json()\r\n            console.log(parsedResponse)\r\n            if(parsedResponse.status === 200) {\r\n                window.sessionStorage.token = parsedResponse.token\r\n               dispatch({type: AuthActionTypes.AUTHENTICATE, value: parsedResponse.user})\r\n            } dispatch({type: AuthActionTypes.ERROR, value: parsedResponse.message})\r\n        } catch (error) {\r\n            console.log('Authenticate Error', error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const deauthenticate = () => {\r\n    return {\r\n        type: AuthActionTypes.DEAUTHENTICATE\r\n    }\r\n}","import React, {useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Authenticate from '../hooks/authenticate'\r\nimport {Grid, Form, Input, Button, Icon, Header, Menu, Message} from 'semantic-ui-react'\r\nimport '../styles/entry.css'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Entry = () => {\r\n    const [route, setRoute] = useState()\r\n    const {handleInputChange, handleSubmit} = Authenticate()\r\n    const logged = useSelector(state => state.auth.loggedIn)\r\n    const error = useSelector(state => state.auth.error)\r\n\r\n    return (\r\n        <Grid columns={2} divided id=\"entry-grid\">\r\n        \r\n            <Grid.Column id=\"left-entry-column\">\r\n                <Menu id=\"description-menu\" vertical secondary>\r\n                    <Menu.Item \r\n                    icon=\"search\"\r\n                    name=\"Follow your interests.\"/>\r\n                    <Menu.Item \r\n                    icon=\"users\"\r\n                    name=\"Hear what other people are talking about.\"/>\r\n                    <Menu.Item\r\n                    icon=\"comment outline\" \r\n                    name=\"Join the conversation.\"/>\r\n                </Menu>\r\n            </Grid.Column>\r\n        \r\n            <Grid.Column id=\"right-entry-column\">\r\n                <Grid.Row>\r\n                    <Form id=\"entry-form\" onSubmit={(e) => handleSubmit(e, route)}>\r\n                        <Form.Field>\r\n                            <Input \r\n                            focus \r\n                            placeholder=\"Email\"\r\n                            type=\"email\" \r\n                            name=\"email\"\r\n                            onChange={handleInputChange}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <Input \r\n                            focus \r\n                            placeholder=\"Password\"\r\n                            type=\"password\" \r\n                            name=\"password\"\r\n                            onChange={handleInputChange}\r\n                            />\r\n                        </Form.Field>\r\n                        <Form.Field>\r\n                            <Button onClick={() => setRoute('login')}>Log in</Button>\r\n                        </Form.Field>\r\n                    </Form>\r\n                        {error ? <Message negative>{error}</Message>:null}\r\n                </Grid.Row>\r\n                \r\n                <Grid.Row id=\"right-column-bottom-row\">\r\n                <div id=\"description\">\r\n                    <Header as=\"h1\">\r\n                        <Icon name=\"sticky note\"/>\r\n                    </Header>\r\n                    <Header as=\"h1\">See what's happening in the world right now</Header>\r\n                </div>\r\n\r\n                <div id=\"modal-buttons\">\r\n                    <p>Join Community Cards today.</p>\r\n                    <Link to=\"/register\"><Button id=\"register-button\">Register</Button></Link>\r\n                    <Link to=\"/login\"><Button id=\"login-button\">Log in</Button></Link>\r\n                </div>\r\n                </Grid.Row>\r\n\r\n            </Grid.Column>\r\n            \r\n            <Grid.Row id=\"footer\">\r\n            <button onClick={()=>console.log(logged)}>LOGGEED</button>\r\n                <h6>About</h6>\r\n                <h6>About</h6>\r\n                <h6>About</h6>\r\n                <h6>About</h6>\r\n                <h6>About</h6>\r\n                <h6>About</h6>\r\n            </Grid.Row>\r\n\r\n            \r\n        </Grid>\r\n    )\r\n}\r\n \r\nexport default Entry;","import React from 'react'\r\nimport {Modal, Form, Button, Input, Message} from 'semantic-ui-react'\r\nimport Authenticate from '../hooks/authenticate'\r\nimport '../styles/auth.css'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Auth = () => {\r\n    const route = window.location.pathname.substring(1)\r\n    const {handleInputChange, handleSubmit} = Authenticate()\r\n    const error = useSelector(state => state.auth.error)\r\n\r\n    \r\n    return (\r\n        <Modal open={true} id=\"auth-modal\">\r\n            <Modal.Content>\r\n                <Form onSubmit={(e) => handleSubmit(e, route)}>\r\n                    <h3>Create Your Account</h3>\r\n                    {error ? <Message negative>{error}</Message> : null}\r\n                    <Form.Field>\r\n                        <Input \r\n                        focus \r\n                        type=\"text\" \r\n                        name=\"username\"\r\n                        placeholder=\"Username\"\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <Input \r\n                        type=\"email\" \r\n                        name=\"email\"\r\n                        placeholder=\"Email\"\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    </Form.Field>\r\n                    <Form.Field>\r\n                        <Input \r\n                        type=\"password\" \r\n                        name=\"password\"\r\n                        placeholder=\"Password\"\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    </Form.Field>\r\n                    <Button>Submit</Button>\r\n                </Form>\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n}\r\n \r\nexport default Auth;","import React from 'react';\r\nimport Authenticate from '../hooks/authenticate'\r\nimport {Header, Icon, Form, Input, Button, Message} from 'semantic-ui-react'\r\nimport '../styles/login.css'\r\nimport { useSelector } from 'react-redux';\r\n\r\nconst Login = () => {\r\n    const route = window.location.pathname.substring(1)\r\n     const {handleInputChange, handleSubmit} = Authenticate()\r\n     const error = useSelector(state => state.auth.error)\r\n    return (\r\n        <div id=\"login\">\r\n        <div id=\"login-header\">\r\n            <Header as=\"h2\"><Icon name=\"sticky note\"/></Header>\r\n            <h2>Log in to Community Cards</h2>\r\n            {error ? <Message negative>{error}</Message>:null}\r\n        </div>\r\n        <Form onSubmit={(e) => handleSubmit(e, route)}>\r\n            <Form.Field>\r\n                <Input \r\n                    focus \r\n                    type=\"email\" \r\n                    name=\"email\"\r\n                    placeholder=\"email\"\r\n                    onChange={handleInputChange}\r\n                />\r\n            </Form.Field>\r\n            <Form.Field>\r\n                <Input \r\n                    focus \r\n                    type=\"password\" \r\n                    name=\"password\"\r\n                    placeholder=\"password\"\r\n                    onChange={handleInputChange}\r\n                />\r\n            </Form.Field>\r\n            <Button>Log in</Button>\r\n        </Form>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Login;","import React from 'react'\r\nimport {deauthenticate} from '../redux/actions/auth'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst Deauthenticate = () => {\r\n    const dispatch = useDispatch()\r\n    const logout = () => {\r\n        dispatch(deauthenticate())\r\n        window.sessionStorage.token = undefined\r\n    }\r\n    return logout\r\n}\r\n \r\nexport default Deauthenticate;","import React, {useState} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {filterFetch} from '../redux/actions/nav'\r\nimport {Menu, Icon} from 'semantic-ui-react'\r\nimport {NavLink} from 'react-router-dom'\r\nimport Deauthenticate from '../hooks/deauthenticate'\r\nimport '../styles/nav.css'\r\n\r\n\r\nconst Nav = () => {\r\n    const currentUser = useSelector(state => state.auth.currentUser)\r\n    const logout = Deauthenticate()\r\n    \r\n    return (\r\n        <Menu vertical secondary id=\"nav\">\r\n            <Menu.Item\r\n            icon=\"sticky note\"\r\n            />\r\n            \r\n            <NavLink exact to=\"/home\" className=\"item\">\r\n             <Icon name=\"home\"/>\r\n             Home\r\n            </NavLink>\r\n\r\n            <NavLink exact to=\"/explore\" className=\"item\">\r\n                <Icon name=\"globe\"/>\r\n                Explore\r\n            </NavLink>\r\n            \r\n            <NavLink exact to={`/${currentUser}`} className=\"item\">\r\n                <Icon name=\"user circle\"/>\r\n                Profile\r\n            </NavLink>\r\n            \r\n            <NavLink \r\n                exact to=\"/logout\" \r\n                className=\"item\" \r\n                onClick={()=> logout()}>\r\n                <Icon name=\"sign out\"/>\r\n                Log out\r\n            </NavLink>\r\n            \r\n            <NavLink exact to=\"/create\" className=\"item\">\r\n                <Icon name=\"plus\"/>\r\n                Create a Card\r\n            </NavLink>\r\n        </Menu>\r\n    );\r\n}\r\n \r\nexport default Nav;","import React, {useState} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useDispatch} from 'react-redux'\r\nimport {post} from '../redux/actions/card'\r\n\r\n\r\nconst Post = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    let [inputs, setInputs] = useState({})\r\n   \r\n    const handleInputChange = e => {\r\n        let regex = /[#]\\S[a-zA-Z]*/g;\r\n        const duplicateText = e.currentTarget.value;\r\n        const tagged = duplicateText.match(regex);\r\n        let strippedTags = tagged && tagged.map(tag => tag.substring(1));\r\n        inputs.tags = strippedTags;\r\n        e.preventDefault()\r\n        setInputs({...inputs, [e.target.name]: e.target.value})\r\n    }\r\n\r\n   const handleSubmit = (e, route) => {\r\n       e.preventDefault()\r\n       dispatch(post(inputs, route))\r\n       history.push('/home')\r\n    }\r\n\r\n    return {handleInputChange, handleSubmit}\r\n}\r\n \r\nexport default Post;","import * as CardActionTypes from '../actionTypes/card'\r\n\r\nexport const post = (data, route) => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8000/api/card/${route}`, {\r\n                method: 'POST',\r\n                body: JSON.stringify(data),\r\n                headers: {\r\n                    'Content-Type' : 'application/json',\r\n                    'auth-token': window.sessionStorage.token\r\n                }\r\n            })\r\n            const parsedResponse = await response.json()\r\n            dispatch({type: CardActionTypes.POST, value: parsedResponse})\r\n        } catch (error) {\r\n            console.log('Authenticate Error', error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getPosts = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8000/api/card/all`, {\r\n                headers: {\r\n                    'auth-token' : window.sessionStorage.token\r\n                }\r\n            })\r\n            const parsedResponse = await response.json()\r\n            console.log(parsedResponse)\r\n            dispatch({type: CardActionTypes.READ, value: parsedResponse})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getPersonalPosts = () => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8000/api/card/personal`, {\r\n                headers: {\r\n                    'auth-token' : window.sessionStorage.token\r\n                }\r\n            })\r\n            const parsedResponse = await response.json()\r\n            console.log(parsedResponse)\r\n            dispatch({type: CardActionTypes.READ, value: parsedResponse})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getProfilePosts = profile => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8000/api/card/profile/${profile}`, {\r\n                headers: {\r\n                    'auth-token' : window.sessionStorage.token\r\n                }\r\n            })\r\n            const parsedResponse = await response.json()\r\n            console.log(parsedResponse)\r\n            dispatch({type: CardActionTypes.READ, value: parsedResponse})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getLikedPosts = profile => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8000/api/card/likes/${profile}`, {\r\n                headers: {\r\n                    'auth-token': window.sessionStorage.token\r\n                }\r\n            })\r\n            const parsedResponse = await response.json()\r\n            console.log(parsedResponse)\r\n            dispatch({type: CardActionTypes.READ, value: parsedResponse})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTaggedPosts = tag => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8000/api/card/tagged/${tag}`, {\r\n                headers: {\r\n                    'auth-token': window.sessionStorage.token\r\n                }\r\n            })\r\n            const parsedResponse = await response.json()\r\n            console.log(parsedResponse)\r\n            dispatch({type: CardActionTypes.READ, value: parsedResponse})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const upvotePost = post => {\r\n    return async dispatch => {\r\n        try {\r\n            console.log(post)\r\n            const response = await fetch(`http://localhost:8000/api/card/upvote/${post}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'auth-token': window.sessionStorage.token\r\n                }\r\n            })\r\n            const parsedResponse = await response.json()\r\n            dispatch({type: CardActionTypes.UPVOTE, value: parsedResponse})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport {upvotePost} from '../redux/actions/card'\r\nimport {likeProfile, followProfile, followedProfile} from '../redux/actions/user'\r\nimport { useDispatch } from 'react-redux';\r\n\r\nconst Interaction = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const upvote = card => {\r\n        console.log(card)\r\n        dispatch(upvotePost(card._id))\r\n        dispatch(likeProfile(card.user_username))\r\n    }\r\n\r\n    const follow = (userToFollow) => {\r\n        dispatch(followProfile(userToFollow))\r\n        dispatch(followedProfile(userToFollow))\r\n    }\r\n\r\n    return {upvote, follow}\r\n}\r\n \r\nexport default Interaction;","import * as UserActionTypes from '../actionTypes/user'\r\n\r\nexport const getProfile = username => {\r\n    return async dispatch => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8000/api/user/profile${username}`, {\r\n                headers: {\r\n                    'auth-token': window.sessionStorage.token\r\n                }\r\n            })\r\n\r\n            const parsedResponse = await response.json()\r\n            dispatch({type: UserActionTypes.PROFILE, value: parsedResponse})\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const likeProfile = username => {\r\n    return async dispatch => {\r\n        try {\r\n            console.log(username)\r\n            const response = await fetch(`http://localhost:8000/api/user/like/${username}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'auth-token': window.sessionStorage.token\r\n                }\r\n            })\r\n\r\n            const parsedResponse = await response.json()\r\n            dispatch({type: UserActionTypes.PROFILE, value: parsedResponse})\r\n            console.log(parsedResponse)\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}\r\n\r\nexport const followProfile = username => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            console.log(username)\r\n            const response = await fetch(`http://localhost:8000/api/user/follow/${username}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'auth-token':window.sessionStorage.token,\r\n                }\r\n            })\r\n            const parsedResponse = await response.json()\r\n            dispatch({type: UserActionTypes.PROFILE, value: parsedResponse})\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nexport const followedProfile = username => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            const response = await fetch(`http://localhost:8000/api/user/followed/${username}`, {\r\n                method: 'PUT',\r\n                headers: {\r\n                    'auth-token':window.sessionStorage.token,\r\n                }\r\n            })\r\n            const parsedResponse = await response.json()\r\n            dispatch({type: UserActionTypes.PROFILE, value: parsedResponse})\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport Interaction from '../hooks/interaction'\r\nimport {Icon} from 'semantic-ui-react'\r\n\r\nconst Upvote = ({card}) => {\r\n    const {upvote} = Interaction()\r\n\r\n    return (\r\n        <Icon name=\"heart outline\" onClick={() => upvote(card)}/>\r\n    );\r\n}\r\n \r\nexport default Upvote;","import React from 'react';\r\nimport {Icon} from 'semantic-ui-react'\r\nimport '../styles/upvote.css'\r\n\r\nconst Upvoted = () => {\r\n    return (\r\n        <Icon name=\"heart\" id=\"upvoted\"/>\r\n    );\r\n}\r\n \r\nexport default Upvoted;","import React from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport reactStringReplace from 'react-string-replace'\r\n\r\nconst Tag = ({card}) => {\r\n    return (\r\n        <p>\r\n        {reactStringReplace(card.body, /(#\\S[a-zA-Z]*)/gi, (match, i) => <Link to={`/tagged/${match.substring(1)}`} key={i} className=\"tag\">{match}</Link>)}</p>\r\n    );\r\n}\r\n \r\nexport default Tag;","import React, {useEffect} from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport {Link, useRouteMatch} from 'react-router-dom'\r\nimport {Grid, Icon} from 'semantic-ui-react'\r\nimport Upvote from './Upvote'\r\nimport Upvoted from './Upvoted'\r\nimport Tag from './Tag'\r\nimport '../styles/card.css'\r\nimport { getProfilePosts, getPosts, getLikedPosts, getPersonalPosts, getTaggedPosts } from '../redux/actions/card'\r\n\r\nconst Feed = () => {\r\n    const dispatch = useDispatch()\r\n    const match = useRouteMatch()\r\n    const cards = useSelector(state => state.card.cards)\r\n    const explore = match.path ==='/explore'\r\n    const home = match.path ==='/home'\r\n    const profilePath = match.path === \"/:username\"\r\n    const likesPath = match.path ===\"/:username/likes\"\r\n    const taggedPath = match.path === \"/tagged/:tag\"\r\n    const tag = match.params.tag\r\n    const profile = match.params.username;\r\n\r\n    useEffect(() => {\r\n        if(explore)      dispatch(getPosts())\r\n        if(home)         dispatch(getPersonalPosts())\r\n        if(profilePath)  dispatch(getProfilePosts(profile))\r\n        if(likesPath)    dispatch(getLikedPosts(profile))\r\n        if(taggedPath)   dispatch(getTaggedPosts(tag))\r\n        console.log(match)\r\n    }, [match.path])\r\n\r\n    const cardList = cards.map && cards.map((card, i) => {\r\n        return(\r\n            <Grid.Row id=\"card-row\" key={i}>\r\n                <Link to={`/${card.user_username}`}><Icon name=\"user circle\"/></Link>\r\n                <div className=\"card-content\">\r\n                    <div className=\"user-user-options\">{card.user_username} <Icon name=\"chevron down\"/></div>\r\n                    <Tag card={card}/>\r\n                    <div className=\"card-menu\">\r\n                    {card.upvoted ? <Upvoted/> : <Upvote card={card}/>}\r\n                    </div>\r\n                </div>\r\n            </Grid.Row>\r\n        )\r\n    })\r\n    \r\n    return (\r\n        <>\r\n        {cardList}\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Feed;","import React from 'react'\r\nimport Post from '../hooks/post'\r\nimport Feed from './Feed'\r\nimport {Grid, Icon, Form, Input, Button} from 'semantic-ui-react'\r\nimport '../styles/layout.css'\r\n\r\nconst Home = () => {\r\n    const {handleInputChange, handleSubmit} = Post()\r\n\r\n    return (\r\n        <>\r\n        <Grid.Row id=\"home-row\">\r\n            Home\r\n        </Grid.Row>\r\n        <Grid.Row id=\"home-menu\">\r\n                    <Icon name=\"user circle outline\"/> \r\n                    <Form onSubmit={(e) => handleSubmit(e, '/post')}>\r\n                        <Form.Field>\r\n                            <Input \r\n                            type=\"text\" \r\n                            name=\"body\" \r\n                            placeholder=\"What's happening?\"\r\n                            onChange={handleInputChange}\r\n                            />\r\n                        </Form.Field>\r\n                        <Button>Submit</Button>\r\n                    </Form>\r\n        </Grid.Row>\r\n        <Feed/>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Home;","import React from 'react';\r\nimport {Button} from 'semantic-ui-react'\r\nimport Interaction from '../hooks/interaction'\r\nconst Follow = ({userToFollow}) => {\r\n    const {follow} = Interaction()\r\n    return (\r\n        <Button onClick={() => follow(userToFollow)}>Follow</Button>\r\n    );\r\n}\r\n \r\nexport default Follow;","import React from 'react';\r\nimport {Button} from 'semantic-ui-react'\r\nconst Followed = () => {\r\n    return (\r\n        <Button>Following</Button>\r\n    );\r\n}\r\n \r\nexport default Followed;","import React, { useEffect } from 'react'\r\nimport Feed from './Feed'\r\nimport Follow from './Follow'\r\nimport Followed from './Followed'\r\nimport {NavLink, useRouteMatch} from 'react-router-dom'\r\nimport {getProfile} from '../redux/actions/user'\r\nimport {Grid, Image, Icon, Menu} from 'semantic-ui-react'\r\nimport '../styles/profile.css'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nconst Profile = () => {\r\n    const match = useRouteMatch()\r\n    const dispatch = useDispatch()\r\n    const user = window.location.pathname\r\n    const profile = useSelector(state => state.user.userData)\r\n    const currentUser = useSelector(state => state.auth.currentUser)\r\n\r\n    useEffect(() => {\r\n        dispatch(getProfile(user))\r\n    }, [profile.followers && profile.followers.length])\r\n\r\n    return (\r\n        <>\r\n            <Grid.Row id=\"top\">\r\n                <NavLink to=\"/home\"><Icon name=\"arrow left\"/></NavLink>\r\n                <div>\r\n                    <h3>{profile.username}</h3>\r\n                    <small> 0 posts</small>\r\n                </div>\r\n            </Grid.Row>\r\n            <Grid.Row id=\"banner\">\r\n                <Image src=\"https://media.tacdn.com/media/attractions-splice-spp-674x446/07/88/4d/9a.jpg\" fluid/>\r\n            </Grid.Row>\r\n            <Grid.Row id=\"information\">\r\n               <Icon name=\"user circle\"/>\r\n                <div className=\"information-text\">\r\n                    <div>\r\n                        <h3>{profile.username}</h3>\r\n                        <p>{profile.email}</p>\r\n                    </div>\r\n                    \r\n                    {profile.isFollowing \r\n                        ?\r\n                            <Followed/>\r\n                        :   \r\n                            <Follow userToFollow={profile.username}/>\r\n                    }\r\n                </div>\r\n\r\n                \r\n                <div className=\"profile-stats\">\r\n                    <span className=\"num\">{profile.following && profile.following.length}</span> Following <span className=\"num\">{profile.followers && profile.followers.length}</span> Followers\r\n                </div>\r\n                \r\n                <Menu pointing secondary id=\"profile-nav\">\r\n                    <NavLink exact to={`/${match.params.username}`}>Cards</NavLink>\r\n                    <NavLink exact to={`/${match.params.username}/likes`}>Likes</NavLink>\r\n                </Menu>\r\n            </Grid.Row>\r\n            <Feed/>\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Profile;","import React from 'react'\r\nimport {Modal, Form, Button, TextArea} from 'semantic-ui-react'\r\nimport Post from '../hooks/post'\r\nimport '../styles/create.css'\r\n\r\nconst CreateCard = () => {\r\n    const {handleInputChange, handleSubmit} = Post()\r\n    return (\r\n        <Modal open={true} id=\"create-modal\" centered={false}>\r\n            <Modal.Header>Create a Card</Modal.Header>\r\n            <Modal.Content>\r\n                <Form onSubmit={(e) => handleSubmit(e, '/post')}>\r\n                    <Form.Field>\r\n                        <TextArea placeholder=\"Create a card\" onChange={handleInputChange} name=\"body\"/>\r\n                    </Form.Field>\r\n                    <Button>Post</Button>\r\n                </Form>\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n}\r\n \r\nexport default CreateCard;","import React from 'react'\r\nimport Nav from './Nav'\r\nimport Home from '../components/Home'\r\nimport Feed from './Feed'\r\nimport Profile from './Profile'\r\nimport CreateCard from './CreateCard'\r\nimport {Grid} from 'semantic-ui-react'\r\nimport {Route, Switch} from 'react-router-dom'\r\nimport '../styles/layout.css'\r\nimport {useSelector} from 'react-redux'\r\n\r\n\r\nconst Layout = () => {\r\n    const cards = useSelector(state => state.card.cards)\r\n    \r\n    return (\r\n        <Grid columns={3} divided id=\"layout-grid\">\r\n            <Grid.Column id=\"left-column\">\r\n                <Nav/>\r\n            </Grid.Column>\r\n            \r\n            <Grid.Column id=\"center-column\">\r\n\r\n                <Switch>\r\n                    <Route exact path=\"/home\" component={Home}/>\r\n                    <Route exact path={[\"/explore\", \"/tagged/:tag\"]} component={Feed}/>\r\n                    <Route exacth path = \"/create\" component={CreateCard}/>\r\n                    <Route exact path={[\"/:username\", \"/:username/likes\"]} component={Profile}/>\r\n                </Switch>\r\n                    \r\n                    {\r\n                        cards.length === 0 \r\n                    ?\r\n                        <Grid.Row id=\"home-intro\">\r\n                            <h3>Welcome to Community Cards</h3>\r\n                            <p>This is a twitter clone that captures the essentials of twitter</p>\r\n                        </Grid.Row>\r\n                    : \r\n                        null\r\n                    }\r\n            </Grid.Column>\r\n            \r\n            <Grid.Column id=\"layout-right-column\"/>\r\n      </Grid>\r\n    );\r\n}\r\n \r\nexport default Layout;","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom'\r\nimport Entry from './components/Entry'\r\nimport Auth from './components/Auth'\r\nimport Login from './components/Login'\r\nimport Layout from './components/Layout'\r\nimport 'semantic-ui-css/semantic.min.css'\r\nimport './styles/base.css'\r\nimport { useSelector } from 'react-redux';\r\n\r\nfunction App() {\r\n  const loggedIn = useSelector(state => state.auth.loggedIn)\r\n\r\n  return (\r\n    <Router>\r\n        \r\n        <Route exact path={[\"/\", \"/register\", \"/logout\"]} component={Entry}/>\r\n        <Route exact path=\"/register\" component={Auth}/>\r\n        <Switch>\r\n          <Route exact path=\"/login\" component={Login}/>\r\n          <Route exact path={[\"/home\", \"/explore\", \"/:username\", \"/:username/likes\", \"/tagged/:tag\"]} component={Layout}/>\r\n        </Switch>\r\n        \r\n        {loggedIn ? <Redirect to=\"/home\"/> : <Redirect to=\"/\"/>}\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport { Provider } from 'react-redux' \r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './redux/reducers/rootReducer'\r\nimport App from './App';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}